%!PS-Adobe-2.0
%%Title: Pseudo-Cupoalic Prismatoid 6/4 | 6/4
%%Creator: PS.py written by marcelteun
%%Pages: 4 1
%%BoundingBox: 0 0 595 842
%%EndComments
%%BeginProlog
(polygons.eps) run
(fonts.eps) run
polygons begin
  /scaling_size 80 def
  /gray_value 0.2 def
  /edge_to_edge_offset_mm 1 mm2pt def
  % set if_show_base to true if you want to see the A4 area drawn
  /if_show_a4_area false def
  % set if_show_base to true if you want to see one whole face with vertex numbers
  /if_show_base false def
  % then define the base face number here to decide which one to show:
  /base_face_no 0 def
  /xy_offset {20 40} def
  /local_dict_size 16 def

  % two crossed squares paired (two needed)
  /vertices0 [
    [1 1] % 0
    [-1 1] % 1
    [-1 -1] % 2
    [1 -1] % 3
  ] def
  /faces0 [
    [0 1 2 3]
  ] def
  /bbox0 [-1.05 -1.05 1.05 1.05] def
  /vertices0 vertices0 scaling_size vertices_scale def
  /vs0 vertices0 0.000001 vertices_make_unique def
  /vs0 vs0 0 2 1 3 vertices_add_intersection def

  /c_square_0 vs0 [4 0 1] cv_vertices def

  % Define combined sub parts:
  /c_square_sub_0
    c_square_0
    dup 2 vertices_get
    xy_neg vertices_translate
  def
  /c_square_sub_1
    c_square_sub_0 2
    c_square_0 1 0
    vertices_edge_attach_to
  def
  /c_square_sub_2
    c_square_sub_1 2
    c_square_0 1 0
    vertices_edge_attach_to
  def
  /c_square_sub_3
    c_square_sub_2 2
    c_square_0 1 0
    vertices_edge_attach_to
  def
  /c_squares [
    c_square_sub_0 white polygon_create
    c_square_sub_1 white polygon_create
    c_square_sub_2 white polygon_create
    c_square_sub_3 white polygon_create
    net_create
  def

  % hexagon
  /vertices1 [
    [2 0] % 0
    [1 1.732050807569] % 1
    [-1 1.732050807569] % 2
    [-2 0] % 3
    [-1 -1.732050807569] % 4
    [1 -1.732050807569] % 5
  ] def
  /faces1 [
    [0 1 2 3 4 5]
  ] def
  /bbox1 [-2 -1.732050807569 2 1.732050807569] def
  /vertices1 vertices1 scaling_size vertices_scale def
  /vs1 vertices1 def

  % triangle
  /vertices3 [
    [1.154700538379 0] % 0
    [-0.57735026919 1] % 1
    [-0.57735026919 -1] % 2
  ] def
  /faces3 [
    [0 1 2]
  ] def
  /bbox3 [-0.57735026919 -1 1.154700538379 1] def
  /vertices3 vertices3 scaling_size vertices_scale def
  /vs3 vertices3 def

  /hex_0
    vs1
    dup 3 vertices_get
    xy_neg vertices_translate
  def
  /tri_eq_0
    hex_0 0
    vs3 1 0
    vertices_edge_attach_to
  def
  /hex [
    hex_0 white polygon_create
    tri_eq_0 white polygon_create
    net_create
  def

  % trapezium
  /vertices2 [
    [1 -1.889822365046] % 0
    [2 0.755928946018] % 1
    [-2 0.755928946018] % 2
    [-1 -1.889822365046] % 3
    [1.5 -0.566946709514] % 4
    [0 0.755928946019] % 5
    [1 -1.889822365046] % 6
    [0 0.755928946018] % 7
    [0 0.755928946018] % 8
    [-1 -1.889822365046] % 9
    [0 0.755928946018] % 10
    [-1.5 -0.566946709514] % 11
  ] def
  /faces2 [
    [0 1 2 3][4 5][6 7][8 9][10 11]
  ] def
  /bbox2 [-2 -1.889822365046 2 0.755928946019] def
  /vertices2 vertices2 scaling_size vertices_scale def
  /vs2 vertices2 0.000001 vertices_make_unique def

  /trap_0
    vs2
    dup 2 vertices_get
    xy_neg vertices_translate
  def
  /trap_1
    trap_0 0
    vs2 1 0
    vertices_edge_attach_to
  def
  /trap_2
    trap_1 1
    vs2 2 1
    vertices_edge_attach_to
  def
  /trap_3
    trap_2 2
    vs2 3 2
    vertices_edge_attach_to
  def
  /trap_4
    trap_3 1
    vs2 2 1
    vertices_edge_attach_to
  def
  /trap_5
    trap_4 0
    vs2 1 0
    vertices_edge_attach_to
  def

  /cut_trap_lines [
    [1 0] [2 1] [3 2] [0 3]
    [6 5] [3 5] [0 5] [4 5]
  ] def

  /vertices3 [
    [-1.133893419028 1] % 0
    [-1.133893419028 -1] % 1
    [1.511857892037 0] % 2
    [-1.133893419028 1] % 3
    [0.188982236505 -0.5] % 4
    [0.188982236505 0.5] % 5
    [-1.133893419028 -1] % 6
  ] def
  /faces3 [
    [0 1 2][3 4][5 6]
  ] def
  /bbox3 [-1.133893419028 -1 1.511857892037 1] def
  /vertices3 vertices3 scaling_size vertices_scale def
  /vs3 vertices3 0.000001 vertices_make_unique def
  /vs3 vs3 0 3 1 4 vertices_add_intersection def

  /diamond vs3 [2 4 5 3] cv_vertices def
  /diamond_0
    trap_0 3 reverse_edges
    diamond 3 0
    vertices_edge_attach_to
  def
  /diamond_1
    trap_2 0
    diamond 1 0
    vertices_edge_attach_to
  def
  /diamond_2
    trap_4 3 reverse_edges
    diamond 3 0
    vertices_edge_attach_to
  def

  /iso_tri vs3 [0 1 5] cv_vertices def
  /tri_left vs3 [0 5 4] cv_vertices def
  /tri_right vs3 [1 3 5] cv_vertices def
  /iso_tri_0
    trap_5 1
    iso_tri 1 0
    vertices_edge_attach_to
  def
  /tri_left_0
    iso_tri_0 2
    tri_left 1 0
    vertices_edge_attach_to
  def
  /tri_right_0
    iso_tri_0 1
    tri_right 0 2
    vertices_edge_attach_to
  def
  /tri_right_1
    tri_right_0 0
    tri_right 1 0
    vertices_edge_attach_to
  def
  /iso_tri_1
    tri_right_1 2
    iso_tri 2 1
    vertices_edge_attach_to
  def
  /tri_left_1
    iso_tri_1 2
    tri_left 1 0
    vertices_edge_attach_to
  def
  /tri_left_2
    tri_left_0 2
    tri_left 0 2
    vertices_edge_attach_to
  def
  /iso_tri_2
    tri_left_2 0
    iso_tri 0 2
    vertices_edge_attach_to
  def
  /tri_right_2
    iso_tri_2 1
    tri_right 0 2
    vertices_edge_attach_to
  def

  /cut_tri_lines [
    [1 0] [2 1] [0 2]
    [4 1] [3 0]
  ] def

  /trap [
    trap_0 cut_trap_lines white polygon_create_from_lines
    trap_1 cut_trap_lines white polygon_create_from_lines
    trap_2 cut_trap_lines white polygon_create_from_lines
    trap_3 cut_trap_lines white polygon_create_from_lines
    trap_4 cut_trap_lines white polygon_create_from_lines
    trap_5 cut_trap_lines white polygon_create_from_lines
    diamond_0 white polygon_create
    diamond_1 white polygon_create
    diamond_2 white polygon_create
    iso_tri_0 white polygon_create
    iso_tri_1 white polygon_create
    iso_tri_2 white polygon_create
    tri_left_0 white polygon_create
    tri_left_1 white polygon_create
    tri_left_2 white polygon_create
    tri_right_0 white polygon_create
    tri_right_1 white polygon_create
    tri_right_2 white polygon_create
    net_create
  def

  /a4_area {
    if_show_a4_area {
      0 0 595 842 rectstroke
    } if
  } bind def
  /show_base_face {
    if_show_base {
      gsave
        xy_offset translate
        bbox 0 get scaling_size mul neg
        bbox 1 get scaling_size mul neg
        translate
        faces aload length { %repeat
          dup 0 get
          vertices exch get
          aload pop
          moveto
          aload length 1 sub { %repeat
            vertices exch get
            aload pop
            lineto
          } repeat
          pop
          closepath stroke
        } repeat
        vs vertices_show_nos
      grestore
    } if
  } bind def

  /def_base_face {
    % Choose the right vertices, faces etc for the show_base_face function
    /put_digit { % (abc..) d
      % replace the last character in string (abc..) with the integer 'd'
      % for which should hold 0 <= d <= 9, i.e. d is a digit
      1 index dup length 1 sub  % (abc..) d (abc..) 4
      48 % this is the ASCII code for the character '0'
      4 -1 roll add % (abc..) (abc..) 4 48+d
      put % (abc.d)
    } bind def
    /vertices
      (vertices?) base_face_no put_digit
      cvn load
    def
    /vs (vs?) base_face_no put_digit cvn load def
    /faces (faces?) base_face_no put_digit cvn load def
    /bbox (bbox?) base_face_no put_digit cvn load def
  } bind def

  def_base_face

end
%%EndProlog
[
  /Author (Marcel T"unnissen)
  /Title (Pseudo-Cupoalic Prismatoid 6/4 | 6/4)
  /DOCINFO
pdfmark

%%Page: 1 1
%%BeginPage
.1 setlinewidth
polygons begin
  a4_area
  %0 -0.7 cm2pt translate
  /dx 2.1 scaling_size mul def
  local_dict_size dict begin
    30 660 translate
    2 { % repeat
      gsave
        3 { %repeat
          c_squares net_cut
          dx 0 translate
        } repeat
      grestore
      0 dx neg translate
    } repeat
  end % local dict
end % polygons
showpage
%%EndPage

%%Page: 2 2
%%BeginPage
.1 setlinewidth
polygons begin
  a4_area
  30 690 translate
  local_dict_size dict begin
    hex net_cut
  end % local dict
end % polygons
showpage
%%EndPage

%%Page: 3 3
%%BeginPage
.1 setlinewidth
polygons begin
  a4_area
  %0 -0.7 cm2pt translate
  gsave
    18 825 translate
    local_dict_size dict begin
      trap net_cut
    end % local dict
  grestore
  20 20 translate
  -82 162 translate
end % polygons
showpage
%%EndPage

%%Page: 4 4
%%BeginPage
.1 setlinewidth
polygons begin
  a4_area
  local_dict_size dict begin
    /if_show_base true def

    gsave
      /base_face_no 0 def
      def_base_face
      show_base_face

      /dy 2.2 scaling_size mul def

      0 dy translate
      /base_face_no 1 def
      def_base_face
      show_base_face

      /dy 3.7 scaling_size mul def

      0 dy translate
      /base_face_no 2 def
      def_base_face
      show_base_face
    grestore

    /dx 2.7 scaling_size mul def
    dx 0 translate
    /base_face_no 3 def
    def_base_face
    show_base_face

  end % local dict
end % polygons
showpage
%%EndPage

%%Tailer
%%EOF
